<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="npgsqlDataAdapter1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAEZcAABGXAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDw0NKTUxMmtVU1Gsamxl2Xd9
        b/J9hHT9fYV0/Xd9b/JrbGXaVVNRrTYyM20QDQ0qAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHRoaNlJQTpd9hHTfl6qE+6PC
        iP+rz43/staU/7bZmP+22Zn/s9aU/6zPjf+jwoj/l6uE+36EdeBSUE+YHhsaNwAAAAQBAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHBkACQcFGUdFRIiDi3nqob6I/7DV
        kf/K5bP/5PLY//D16//19/P/+/z7//r7+f/v8e3/7/Tq/+Ty2f/K5bT/sdaR/6K+iP+EjHrrSEZFiwkI
        BhoiHxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgnx3ABsYFzVmZmHBnbOI/q/V
        j//X68X/+Pz2////////////5OTk/83My//Nzcz/zMzL/8zLyv/r6+r////////////5/Pb/1+vH/7DV
        j/+dtIn+Z2diwxwZGDaclJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAHh0cQAhHx1AdXhu2KXE
        if/B4Kf/9frw///////////////////////o5+f/xcTD/76+vP/Dw8L/0dHQ/+Xk5P//////////////
        ////////9frx/8Lhqf+lxYn/dnlv2iIfHkOKhoIAAAAAAAAAAAAAAAAAAAAAABUUDwAvLSoAGxgWNXV4
        btimyIj/z+e6//3+/f/////////////////////////////+///9/f7//fz+//38/v/7+vz//f39////
        /////////////////////////f79/9DnvP+myYn/dnlv2hsYFjcyMC0ACgkEAAAAAAAAAAAAGBcSAAYE
        ARpmZmHBpMSJ/8/nuv/////////////////////////////////7/fn/5fHa/8vktv+73KD/u9yg/8vk
        tf/k8dn/+v34/////////////////////////////////9DnvP+lxYn/Z2diwwQCABsXFhEAAAAAAB8e
        GgAAAAACSEZFiZ2ziP/B4Kf//P38///////////////////////7/fn/zeW4/4rBWv9irCL/U6UO/1Cj
        Cf9Qown/U6UN/2GsIf+JwVn/zOS3//r9+P///////////////////////f79/8Dfp/+dtIj/SEZFiwAA
        AAMWFRAAJCMeAB4bGjeDi3npr9WO//b78f/HxsX/tbWz//f39///////8Pfq/5vKcv9YpxT/TaEF/1Kk
        C/9SpAz/UKMJ/1CjCf9SpAz/UqQL/02hBf9YpxT/mcpw/+/36f////////////T08//Lysr/1NjP/7HW
        kP+EjXrqHBkYOSMiHQAAAAADU1FPl6G+iP/X7Mb/5eTl/46Oi/9TUk//mJeW/+jv4f+Kwlr/T6IH/0+j
        CP9Oogf/c7U6/3C0Nv9Oogf/TqIH/26zNP90tjv/TqIH/0+jCP9Pogf/iMBX//D36f/b29v/i4uI/7Ky
        sP/7+vz/1+vG/6K/iP9TUU+ZAAAAAxIODSp+hHXfsNWQ//j89f/x8fH/4eHg/4+OjP/Cw7//mMdv/0+j
        CP9Qown/UKMJ/06iB/+fzHj/mclw/06iBv9Oogb/l8ht/6HNev9Pogf/UKMJ/1CjCf9Pogf/mclv/7y+
        uf+zs7L/3t7d/8HAv//w8+3/sdaS/36FdeAMCQgsOTU2bZeqhPvK5bP/7u3v/52cmv+dnZv/zczN/7vT
        pv9aqRb/T6MI/1CjCf9Qown/VKUP/8Tgrf++3aT/UqQM/1KkC/+83KH/xuGv/1WmEP9Qown/UKMJ/0+j
        CP9YpxT/wdqs/4mIh/+HhoT/f398/+/u7//M5rX/l6yE/DczNG9WVVOtosGH/+b02v+wr6//t7e1/7Gx
        sP+srqj/jcVe/02hBf9Qown/UKMJ/0+iB/9krib/4O/U/9zszv9fqx//Xqoc/9rsy//i79b/Zq4o/0+i
        B/9Qown/UKMJ/02iBf+FvVT/tLax/9nZ2f/Y2Nf/7+7v/+Ty2f+jwof/VlRSr2ttZtqqzoz/9vzx/7++
        vf+Sko//l5aV/6m1nf9lryX/T6IH/1CjCf9Qown/TaIF/3+8TP/x+Ov/7/fo/3e4QP91tjz/7vbn//L4
        7P+CvU//TaIF/1CjCf9Qown/T6IH/2OuI//Cz7b/tLOz/5aWk/+bmpj/8ffs/6vPjf9rbWXbeH1w87HV
        k//7/fn/9vb2/7e3tf/KyMn/yOCy/1SlDv9Qown/UKMJ/1CjCf9Oogb/os59//j79f/3+/T/mMlu/5XH
        a//3+/T/9/v0/6XQgP9Oogb/UKMJ/1CjCf9Qown/VaYP/63Glv97eXn/dnZz/6yrqv/4+vf/s9aU/3h+
        cPR+hXT9ttmY//v8+v+srKr/hYWC/6mnqP+315z/UKMJ/1CjCf9Qown/UKMJ/0+jCP96uUT/1OjC/9Hn
        vv91tj3/dLY7/9DmvP/U6cP/fLpG/0+jCP9Qown/UKMJ/1CjCf9Qowj/tteZ/+bk5v/r6+v/z8/O//X1
        9P+32pr/foZ0/n6FdP222Zn/6+zq/5eWlP/w8PD/nJqa/6LBhv9RpAr/UKMJ/1CjCf9Pogj/TaEF/0qg
        AP+o0YX/oc16/0mfAP9JnwD/nsx3/6rSh/9KoAD/TaEF/0+iCP9Qown/UKMJ/1CjCf+x0pT/paOk/4iH
        hP9vb2z/7e7s/7jamv9+hnT+eH1w87LVk//z9vH/zc3M//r6+v/Avr//t9Ch/1WmD/9Qown/T6MI/2Gs
        If+HwFb/k8Zn/+Dv0//c7c7/kcVk/5DFY//a7Mz/4e/V/5TGaP+HwFf/Yqwi/0+jCP9Qown/U6UO/8DZ
        qf/g3+H/6enp/8nJyP/09fL/s9aU/3h+cPRrbWbaqs6M//P57v///v//x8fG/318ev/Q3MT/Y64j/0+i
        B/9NoQX/hr9V/9fqx/+32Zn/7/bo/+315v+z15T/staT/+z15P/v9+n/t9ma/9bqxv+IwFf/TaEF/0+i
        B/9irSL/zNnA/5eWlf+Kiof/uLe2/+Dl2/+s0I7/a25l3FdVU66iwYf/5vTa/9HQ0f9gYFz/ZWRh/8HD
        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
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>